#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server {
       listen     80 default_server;
       server_name  utest.ettesal.local;
       root     /usr/local/openresty/nginx/html;
       access_by_lua '
         local opts = {
           redirect_uri_path = "/redirect_uri",
           accept_none_alg = true,
           discovery = "http://ett-kc.ettesal.local:8080/auth/realms/ettesal/.well-known/openid-configuration",
           client_id = "nginx-test",
           client_secret = "3b998dcd-75fa-46a9-89d7-29857d15a013",
           redirect_uri_scheme = "http",
           logout_path = "/logout",
           redirect_after_logout_uri = "http://ett-kc.ettesal.local:8080/auth/realms/ettesal/protocol/openid-connect/logout?redirect_uri=http://utest.ettesal.local/",
           redirect_after_logout_with_id_token_hint = false,
           session_contents = {id_token=true}
         }
         -- call introspect for OAuth 2.0 Bearer Access Token validation
         local res, err = require("resty.openidc").authenticate(opts)
         if err then
           ngx.status = 403
           ngx.say(err)
           ngx.exit(ngx.HTTP_FORBIDDEN)
         end
      ';
      # I disabled caching so the browser won't cache the site.
      expires           0;
      add_header        Cache-Control private;
      location / {
      }
      # redirect server error pages to the static page /40x.html
      #
      error_page 404 /404.html;
          location = /40x.html {
      }
      # redirect server error pages to the static page /50x.html
      #
      error_page 500 502 503 504 /50x.html;
          location = /50x.html {
      }
  }
  
  lua_package_path '~/lua/?.lua;;';
  resolver 192.168.20.63; 
  # cache for discovery metadata documents
  lua_shared_dict discovery 1m;
  # cache for JWKs
  lua_shared_dict jwks 1m;

}
